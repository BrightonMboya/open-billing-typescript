/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const DiscountCreateStatus = {
  Active: "active",
  Archived: "archived",
} as const;
export type DiscountCreateStatus = ClosedEnum<typeof DiscountCreateStatus>;

export const DiscountCreateType = {
  Flat: "flat",
  Percentage: "percentage",
  FlatPerSeat: "flat_per_seat",
} as const;
export type DiscountCreateType = ClosedEnum<typeof DiscountCreateType>;

/**
 * Any valid JSON value
 */
export type DiscountCreateCustomData = {};

export type DiscountCreateRequestBody = {
  status?: DiscountCreateStatus | undefined;
  description?: string | null | undefined;
  enabledForCheckout?: boolean | null | undefined;
  amount: number;
  currencyCode: string;
  type: DiscountCreateType;
  recur?: boolean | null | undefined;
  maxRecurringIntervals?: string | null | undefined;
  usageLimit?: number | null | undefined;
  expiresAt?: string | null | undefined;
  /**
   * Any valid JSON value
   */
  customData?: DiscountCreateCustomData | undefined;
  priceIds?: Array<string> | undefined;
};

export const DiscountCreateDiscountsStatus = {
  Active: "active",
  Archived: "archived",
} as const;
export type DiscountCreateDiscountsStatus = ClosedEnum<
  typeof DiscountCreateDiscountsStatus
>;

export const DiscountCreateDiscountsType = {
  Flat: "flat",
  Percentage: "percentage",
  FlatPerSeat: "flat_per_seat",
} as const;
export type DiscountCreateDiscountsType = ClosedEnum<
  typeof DiscountCreateDiscountsType
>;

/**
 * Creates a new Discount
 */
export type DiscountCreateResponseBody = {
  id: string;
  status?: DiscountCreateDiscountsStatus | undefined;
  description?: string | null | undefined;
  enabledForCheckout?: boolean | null | undefined;
  amount: string;
  currencyCode: string;
  type: DiscountCreateDiscountsType;
  recur?: boolean | null | undefined;
  maxRecurringIntervals?: string | null | undefined;
  usageLimit?: number | null | undefined;
  expiresAt?: string | null | undefined;
  customData?: any | null | undefined;
  timesUsed?: number | null | undefined;
  createdAt: string;
  updatedAt: string;
  restrictedTo: Array<string>;
};

/** @internal */
export const DiscountCreateStatus$inboundSchema: z.ZodNativeEnum<
  typeof DiscountCreateStatus
> = z.nativeEnum(DiscountCreateStatus);

/** @internal */
export const DiscountCreateStatus$outboundSchema: z.ZodNativeEnum<
  typeof DiscountCreateStatus
> = DiscountCreateStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DiscountCreateStatus$ {
  /** @deprecated use `DiscountCreateStatus$inboundSchema` instead. */
  export const inboundSchema = DiscountCreateStatus$inboundSchema;
  /** @deprecated use `DiscountCreateStatus$outboundSchema` instead. */
  export const outboundSchema = DiscountCreateStatus$outboundSchema;
}

/** @internal */
export const DiscountCreateType$inboundSchema: z.ZodNativeEnum<
  typeof DiscountCreateType
> = z.nativeEnum(DiscountCreateType);

/** @internal */
export const DiscountCreateType$outboundSchema: z.ZodNativeEnum<
  typeof DiscountCreateType
> = DiscountCreateType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DiscountCreateType$ {
  /** @deprecated use `DiscountCreateType$inboundSchema` instead. */
  export const inboundSchema = DiscountCreateType$inboundSchema;
  /** @deprecated use `DiscountCreateType$outboundSchema` instead. */
  export const outboundSchema = DiscountCreateType$outboundSchema;
}

/** @internal */
export const DiscountCreateCustomData$inboundSchema: z.ZodType<
  DiscountCreateCustomData,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type DiscountCreateCustomData$Outbound = {};

/** @internal */
export const DiscountCreateCustomData$outboundSchema: z.ZodType<
  DiscountCreateCustomData$Outbound,
  z.ZodTypeDef,
  DiscountCreateCustomData
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DiscountCreateCustomData$ {
  /** @deprecated use `DiscountCreateCustomData$inboundSchema` instead. */
  export const inboundSchema = DiscountCreateCustomData$inboundSchema;
  /** @deprecated use `DiscountCreateCustomData$outboundSchema` instead. */
  export const outboundSchema = DiscountCreateCustomData$outboundSchema;
  /** @deprecated use `DiscountCreateCustomData$Outbound` instead. */
  export type Outbound = DiscountCreateCustomData$Outbound;
}

export function discountCreateCustomDataToJSON(
  discountCreateCustomData: DiscountCreateCustomData,
): string {
  return JSON.stringify(
    DiscountCreateCustomData$outboundSchema.parse(discountCreateCustomData),
  );
}

export function discountCreateCustomDataFromJSON(
  jsonString: string,
): SafeParseResult<DiscountCreateCustomData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DiscountCreateCustomData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DiscountCreateCustomData' from JSON`,
  );
}

/** @internal */
export const DiscountCreateRequestBody$inboundSchema: z.ZodType<
  DiscountCreateRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: DiscountCreateStatus$inboundSchema.optional(),
  description: z.nullable(z.string()).optional(),
  enabled_for_checkout: z.nullable(z.boolean()).optional(),
  amount: z.number(),
  currency_code: z.string(),
  type: DiscountCreateType$inboundSchema,
  recur: z.nullable(z.boolean()).optional(),
  max_recurring_intervals: z.nullable(z.string()).optional(),
  usage_limit: z.nullable(z.number().int()).optional(),
  expires_at: z.nullable(z.string()).optional(),
  custom_data: z.lazy(() => DiscountCreateCustomData$inboundSchema).optional(),
  price_ids: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "enabled_for_checkout": "enabledForCheckout",
    "currency_code": "currencyCode",
    "max_recurring_intervals": "maxRecurringIntervals",
    "usage_limit": "usageLimit",
    "expires_at": "expiresAt",
    "custom_data": "customData",
    "price_ids": "priceIds",
  });
});

/** @internal */
export type DiscountCreateRequestBody$Outbound = {
  status?: string | undefined;
  description?: string | null | undefined;
  enabled_for_checkout?: boolean | null | undefined;
  amount: number;
  currency_code: string;
  type: string;
  recur?: boolean | null | undefined;
  max_recurring_intervals?: string | null | undefined;
  usage_limit?: number | null | undefined;
  expires_at?: string | null | undefined;
  custom_data?: DiscountCreateCustomData$Outbound | undefined;
  price_ids?: Array<string> | undefined;
};

/** @internal */
export const DiscountCreateRequestBody$outboundSchema: z.ZodType<
  DiscountCreateRequestBody$Outbound,
  z.ZodTypeDef,
  DiscountCreateRequestBody
> = z.object({
  status: DiscountCreateStatus$outboundSchema.optional(),
  description: z.nullable(z.string()).optional(),
  enabledForCheckout: z.nullable(z.boolean()).optional(),
  amount: z.number(),
  currencyCode: z.string(),
  type: DiscountCreateType$outboundSchema,
  recur: z.nullable(z.boolean()).optional(),
  maxRecurringIntervals: z.nullable(z.string()).optional(),
  usageLimit: z.nullable(z.number().int()).optional(),
  expiresAt: z.nullable(z.string()).optional(),
  customData: z.lazy(() => DiscountCreateCustomData$outboundSchema).optional(),
  priceIds: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    enabledForCheckout: "enabled_for_checkout",
    currencyCode: "currency_code",
    maxRecurringIntervals: "max_recurring_intervals",
    usageLimit: "usage_limit",
    expiresAt: "expires_at",
    customData: "custom_data",
    priceIds: "price_ids",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DiscountCreateRequestBody$ {
  /** @deprecated use `DiscountCreateRequestBody$inboundSchema` instead. */
  export const inboundSchema = DiscountCreateRequestBody$inboundSchema;
  /** @deprecated use `DiscountCreateRequestBody$outboundSchema` instead. */
  export const outboundSchema = DiscountCreateRequestBody$outboundSchema;
  /** @deprecated use `DiscountCreateRequestBody$Outbound` instead. */
  export type Outbound = DiscountCreateRequestBody$Outbound;
}

export function discountCreateRequestBodyToJSON(
  discountCreateRequestBody: DiscountCreateRequestBody,
): string {
  return JSON.stringify(
    DiscountCreateRequestBody$outboundSchema.parse(discountCreateRequestBody),
  );
}

export function discountCreateRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<DiscountCreateRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DiscountCreateRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DiscountCreateRequestBody' from JSON`,
  );
}

/** @internal */
export const DiscountCreateDiscountsStatus$inboundSchema: z.ZodNativeEnum<
  typeof DiscountCreateDiscountsStatus
> = z.nativeEnum(DiscountCreateDiscountsStatus);

/** @internal */
export const DiscountCreateDiscountsStatus$outboundSchema: z.ZodNativeEnum<
  typeof DiscountCreateDiscountsStatus
> = DiscountCreateDiscountsStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DiscountCreateDiscountsStatus$ {
  /** @deprecated use `DiscountCreateDiscountsStatus$inboundSchema` instead. */
  export const inboundSchema = DiscountCreateDiscountsStatus$inboundSchema;
  /** @deprecated use `DiscountCreateDiscountsStatus$outboundSchema` instead. */
  export const outboundSchema = DiscountCreateDiscountsStatus$outboundSchema;
}

/** @internal */
export const DiscountCreateDiscountsType$inboundSchema: z.ZodNativeEnum<
  typeof DiscountCreateDiscountsType
> = z.nativeEnum(DiscountCreateDiscountsType);

/** @internal */
export const DiscountCreateDiscountsType$outboundSchema: z.ZodNativeEnum<
  typeof DiscountCreateDiscountsType
> = DiscountCreateDiscountsType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DiscountCreateDiscountsType$ {
  /** @deprecated use `DiscountCreateDiscountsType$inboundSchema` instead. */
  export const inboundSchema = DiscountCreateDiscountsType$inboundSchema;
  /** @deprecated use `DiscountCreateDiscountsType$outboundSchema` instead. */
  export const outboundSchema = DiscountCreateDiscountsType$outboundSchema;
}

/** @internal */
export const DiscountCreateResponseBody$inboundSchema: z.ZodType<
  DiscountCreateResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  status: DiscountCreateDiscountsStatus$inboundSchema.optional(),
  description: z.nullable(z.string()).optional(),
  enabled_for_checkout: z.nullable(z.boolean()).optional(),
  amount: z.string(),
  currency_code: z.string(),
  type: DiscountCreateDiscountsType$inboundSchema,
  recur: z.nullable(z.boolean()).optional(),
  max_recurring_intervals: z.nullable(z.string()).optional(),
  usage_limit: z.nullable(z.number().int()).optional(),
  expires_at: z.nullable(z.string()).optional(),
  custom_data: z.nullable(z.any()).optional(),
  times_used: z.nullable(z.number().int()).optional(),
  created_at: z.string(),
  updated_at: z.string(),
  restricted_to: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    "enabled_for_checkout": "enabledForCheckout",
    "currency_code": "currencyCode",
    "max_recurring_intervals": "maxRecurringIntervals",
    "usage_limit": "usageLimit",
    "expires_at": "expiresAt",
    "custom_data": "customData",
    "times_used": "timesUsed",
    "created_at": "createdAt",
    "updated_at": "updatedAt",
    "restricted_to": "restrictedTo",
  });
});

/** @internal */
export type DiscountCreateResponseBody$Outbound = {
  id: string;
  status?: string | undefined;
  description?: string | null | undefined;
  enabled_for_checkout?: boolean | null | undefined;
  amount: string;
  currency_code: string;
  type: string;
  recur?: boolean | null | undefined;
  max_recurring_intervals?: string | null | undefined;
  usage_limit?: number | null | undefined;
  expires_at?: string | null | undefined;
  custom_data?: any | null | undefined;
  times_used?: number | null | undefined;
  created_at: string;
  updated_at: string;
  restricted_to: Array<string>;
};

/** @internal */
export const DiscountCreateResponseBody$outboundSchema: z.ZodType<
  DiscountCreateResponseBody$Outbound,
  z.ZodTypeDef,
  DiscountCreateResponseBody
> = z.object({
  id: z.string(),
  status: DiscountCreateDiscountsStatus$outboundSchema.optional(),
  description: z.nullable(z.string()).optional(),
  enabledForCheckout: z.nullable(z.boolean()).optional(),
  amount: z.string(),
  currencyCode: z.string(),
  type: DiscountCreateDiscountsType$outboundSchema,
  recur: z.nullable(z.boolean()).optional(),
  maxRecurringIntervals: z.nullable(z.string()).optional(),
  usageLimit: z.nullable(z.number().int()).optional(),
  expiresAt: z.nullable(z.string()).optional(),
  customData: z.nullable(z.any()).optional(),
  timesUsed: z.nullable(z.number().int()).optional(),
  createdAt: z.string(),
  updatedAt: z.string(),
  restrictedTo: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    enabledForCheckout: "enabled_for_checkout",
    currencyCode: "currency_code",
    maxRecurringIntervals: "max_recurring_intervals",
    usageLimit: "usage_limit",
    expiresAt: "expires_at",
    customData: "custom_data",
    timesUsed: "times_used",
    createdAt: "created_at",
    updatedAt: "updated_at",
    restrictedTo: "restricted_to",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DiscountCreateResponseBody$ {
  /** @deprecated use `DiscountCreateResponseBody$inboundSchema` instead. */
  export const inboundSchema = DiscountCreateResponseBody$inboundSchema;
  /** @deprecated use `DiscountCreateResponseBody$outboundSchema` instead. */
  export const outboundSchema = DiscountCreateResponseBody$outboundSchema;
  /** @deprecated use `DiscountCreateResponseBody$Outbound` instead. */
  export type Outbound = DiscountCreateResponseBody$Outbound;
}

export function discountCreateResponseBodyToJSON(
  discountCreateResponseBody: DiscountCreateResponseBody,
): string {
  return JSON.stringify(
    DiscountCreateResponseBody$outboundSchema.parse(discountCreateResponseBody),
  );
}

export function discountCreateResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<DiscountCreateResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DiscountCreateResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DiscountCreateResponseBody' from JSON`,
  );
}
