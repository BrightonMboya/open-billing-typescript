/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export const Provider = {
  PaystackApiKey: "PAYSTACK_API_KEY",
  SelcomApiKey: "SELCOM_API_KEY",
  DpoApiKey: "DPO_API_KEY",
  FlutterwaveApiKey: "FLUTTERWAVE_API_KEY",
  StripeApiKey: "STRIPE_API_KEY",
} as const;
export type Provider = ClosedEnum<typeof Provider>;

export type PostApiKeysPaymentProviderRequestBody = {
  provider: Provider;
  apiKey: string;
};

/** @internal */
export const Provider$inboundSchema: z.ZodNativeEnum<typeof Provider> = z
  .nativeEnum(Provider);

/** @internal */
export const Provider$outboundSchema: z.ZodNativeEnum<typeof Provider> =
  Provider$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Provider$ {
  /** @deprecated use `Provider$inboundSchema` instead. */
  export const inboundSchema = Provider$inboundSchema;
  /** @deprecated use `Provider$outboundSchema` instead. */
  export const outboundSchema = Provider$outboundSchema;
}

/** @internal */
export const PostApiKeysPaymentProviderRequestBody$inboundSchema: z.ZodType<
  PostApiKeysPaymentProviderRequestBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  provider: Provider$inboundSchema,
  apiKey: z.string(),
});

/** @internal */
export type PostApiKeysPaymentProviderRequestBody$Outbound = {
  provider: string;
  apiKey: string;
};

/** @internal */
export const PostApiKeysPaymentProviderRequestBody$outboundSchema: z.ZodType<
  PostApiKeysPaymentProviderRequestBody$Outbound,
  z.ZodTypeDef,
  PostApiKeysPaymentProviderRequestBody
> = z.object({
  provider: Provider$outboundSchema,
  apiKey: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiKeysPaymentProviderRequestBody$ {
  /** @deprecated use `PostApiKeysPaymentProviderRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    PostApiKeysPaymentProviderRequestBody$inboundSchema;
  /** @deprecated use `PostApiKeysPaymentProviderRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    PostApiKeysPaymentProviderRequestBody$outboundSchema;
  /** @deprecated use `PostApiKeysPaymentProviderRequestBody$Outbound` instead. */
  export type Outbound = PostApiKeysPaymentProviderRequestBody$Outbound;
}

export function postApiKeysPaymentProviderRequestBodyToJSON(
  postApiKeysPaymentProviderRequestBody: PostApiKeysPaymentProviderRequestBody,
): string {
  return JSON.stringify(
    PostApiKeysPaymentProviderRequestBody$outboundSchema.parse(
      postApiKeysPaymentProviderRequestBody,
    ),
  );
}

export function postApiKeysPaymentProviderRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<PostApiKeysPaymentProviderRequestBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      PostApiKeysPaymentProviderRequestBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostApiKeysPaymentProviderRequestBody' from JSON`,
  );
}
